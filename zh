#!/bin/bash

# HACK: Support specifying a different hosts file for non-production envs,
# e.g. `./zh setup deployment/hosts.staging`.
# TODO: Move this logic into specific commands, or use an arg parser?
hosts=$2
if [ -z $2 ]; then
  hosts=deployment/hosts
fi

# Commands
case "$1" in
init)
    brew install https://raw.githubusercontent.com/Homebrew/homebrew/bda8d64e0e9011aab1612868eac2f709e631c503/Library/Formula/haskell-stack.rb
    stack setup
    ;;
run)
    stack build --file-watch --exec ./scripts/run-development.sh
    ;;
test)
    stack test
    ;;
ping)
    ansible --user zoomhub --inventory-file ${hosts} all -m ping
    ;;
bootstrap)
    # Pre-req: sshpass
    if ! [ $(which sshpass) ]; then
        echo "Installing sshpass..."
        # Via: http://www.hashbangcode.com/blog/installing-sshpass-osx-mavericks
        curl -O -L http://downloads.sourceforge.net/project/sshpass/sshpass/1.05/sshpass-1.05.tar.gz \
            && tar xvzf sshpass-1.05.tar.gz
        rm sshpass-1.05.tar.gz
        cd sshpass-1.05
        ./configure
        make
        echo "Running sudo command; enter your sudo password when prompted."
        sudo make install
        cd - > /dev/null
        rm -rf sshpass-1.05
    fi

    # Pre-req: passlib
    if ! [ $(pip freeze | grep passlib) ]; then
        echo "Installing passlib..."
        # Via: https://pythonhosted.org/passlib/install.html
        echo 'If the next step doesn’t work, re-run this command with `sudo`.'
        pip install passlib
    fi

    echo "Bootstrapping server; enter server’s root password when prompted."
    ansible-playbook --inventory-file ${hosts} deployment/bootstrap.yml --ask-pass
    ;;
setup)
    ansible-playbook --inventory-file ${hosts} deployment/setup.yml --ask-vault-pass
    ;;
deploy)
    ansible-playbook --inventory-file ${hosts} deployment/deploy.yml --ask-vault-pass
    ;;
lint)
    git diff-files --quiet
    HAS_GIT_UNSTAGED_CHANGES=$?
    if [[ "$HAS_GIT_UNSTAGED_CHANGES" != "0" ]] ; then
        echo 'Commit all changes to Git before running `./zh lint`'
        exit 1
    fi
    git ls-files | grep '.hs$' | xargs stylish-haskell --inplace
    ;;
*)
    echo "Unknown command: $1. Try: bootstrap|ping|setup|deploy"
    ;;
esac
